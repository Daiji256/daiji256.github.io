---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import AdjustText from '../../components/AdjustText.astro';
import { TAG_PREFIX, TAGS_TITLE } from '../../consts';
import { EXTERNAL_POSTS } from '../../externalPosts';

const posts = (await getCollection('posts')).map((post) => {
  return {
    tags: post.data.tags,
  };
});
const externalPosts = EXTERNAL_POSTS.map((post) => {
  return {
    tags: post.tags,
  };
});
const tags = (() => {
  const tagsCount: Map<string, { name: string; count: number }> = new Map();
  [...posts, ...externalPosts].forEach((post) => {
    post.tags?.forEach((tag) => {
      const value = tagsCount.get(tag.id);
      tagsCount.set(tag.id, {
        name: value?.name ?? tag.name,
        count: (value?.count ?? 0) + 1,
      });
    });
  });
  const tags: { id: string; name: string; count: number }[] = [];
  tagsCount.forEach((value, id) => {
    tags.push({ id: id, name: value.name, count: value.count });
  });
  return tags.sort((a, b) => b.count - a.count);
})();
---

<>
  <BaseLayout title={TAGS_TITLE}>
    <h1><AdjustText text={TAGS_TITLE} /></h1>
    <ul class="tags">
      {
        tags.map((tag) => (
          <li>
            <a href={`/tags/${tag.id}/`} class="tag">
              <AdjustText text={`${TAG_PREFIX}${tag.name} (${tag.count})`} />
            </a>
          </li>
        ))
      }
    </ul>
  </BaseLayout>
</>

<style lang="scss">
  .tags {
    margin: 0 0 0 -24px;
    padding: 0;
    list-style: none;
    display: flex;
    flex-wrap: wrap;

    .tag {
      font: typography.$font-body-medium;
      line-height: 2.5;
      margin-left: 24px;
      color: inherit;
      text-decoration: none;
      border-radius: 2px;

      @media (hover: hover) {
        &:hover {
          color: colors.$color-link;
          outline: 1px dashed;
        }
      }

      &:active {
        color: colors.$color-link;
        outline: 1px solid;
      }
    }
  }
</style>
